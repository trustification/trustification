{{- if .Values.modules.v11yWalker.enabled }}
{{- $mod := dict "root" . "name" "v11y-walker" "component" "v11y" "module" .Values.modules.v11yWalker -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "trustification.common.name" $mod }}
  labels:
    {{- include "trustification.common.labels" $mod | nindent 4 }}

spec:
  schedule: {{ $mod.module.schedule | default "0 1 * * *" | quote }}
  suspend: {{ $mod.module.suspend | default false }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "trustification.common.selectorLabels" $mod | nindent 12 }}

        spec:
          {{- include "trustification.application.pod" $mod | nindent 10 }}

          restartPolicy: Never
          volumes:
            - name: cvelist
              persistentVolumeClaim:
                claimName: {{ include "trustification.common.name" $mod }}
            {{- include "trustification.application.extraVolumes" $mod | nindent 12 }}

          initContainers:
            - name: git-fetch
              {{- include "trustification.common.defaultImage" $mod | nindent 14 }}
              {{- include "trustification.application.container" $mod | nindent 14 }}

              volumeMounts:
                - mountPath: /git
                  name: cvelist

              command: ["/bin/sh"]
              workingDir: /git
              args:
                - "-ec"
                - |
                  echo "Check cvelistV5 directory is a valid Git repository" 
                  if test -d "cvelistV5/.git" && git -C cvelistV5 rev-parse --is-inside-work-tree >/dev/null 2>&1; then
                    echo "Check cvelistV5 repository integrity"
                    if git -C cvelistV5 fsck --full >/dev/null 2>&1; then
                      echo "cvelistV5 repository is clean. Pulling latest changes"
                      cd cvelistV5
                      git stash
                      git stash clear
                      git pull
                      exit 0
                    else
                      echo "cvelistV5 repository corrupted. Cleaning up"
                      rm -rf cvelistV5/*
                    fi
                  else
                    echo "Not a valid Git repository. Cleaning up..."
                    rm -rf cvelistV5/*
                  fi
                  
                  echo "Cloning cvelistV5 repository"
                  git clone https://github.com/CVEProject/cvelistV5 cvelistV5
          containers:
            - name: walker
              {{- include "trustification.common.defaultImage" $mod | nindent 14 }}
              {{- include "trustification.application.infrastructure.probes" $mod | nindent 14 }}
              {{- include "trustification.application.container" $mod | nindent 14 }}

              volumeMounts:
                - mountPath: /mnt
                  name: cvelist
                {{- include "trustification.application.extraVolumeMounts" $mod | nindent 16 }}

              command: ["/trust"]
              args:
                - "v11y"
                - "walker"
                - "--source"
                - "/mnt/cvelistV5"

              {{ with .Values.modules.v11yWalker.onlyPrefixes }}
                {{ range . }}
                - --require-prefix
                - {{ . | quote }}
                {{ end }}
              {{ else }}
                - "--delta-file"
                - "/mnt/last-delta"
              {{ end }}

              env:
                {{- include "trustification.application.rust.envVars" $mod | nindent 16 }}
                {{- include "trustification.application.infrastructure.envVars" $mod | nindent 16 }}
                {{- include "trustification.storage.envVars" ( set (deepCopy $mod) "storage" .Values.v11y ) | nindent 16 }}

              ports:
                {{- include "trustification.application.infrastructure.podPorts" $mod | nindent 16 }}

{{- end }}
